{"ast":null,"code":"var _jsxFileName = \"E:\\\\curd\\\\react-crud-project\\\\src\\\\components\\\\Dashboard\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = _ref => {\n  _s();\n\n  let {\n    students,\n    selectedStudent,\n    setStudents,\n    setIsEditing\n  } = _ref;\n  const id = selectedStudent.id;\n  const [firstName, setFirstName] = useState(selectedStudent.firstName);\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\n  const [email, setEmail] = useState(selectedEmployee.email);\n  const [salary, setSalary] = useState(selectedEmployee.salary);\n  const [date, setDate] = useState(selectedEmployee.date);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n\n    const employee = {\n      id,\n      firstName,\n      lastName,\n      email,\n      salary,\n      date\n    };\n\n    for (let i = 0; i < employees.length; i++) {\n      if (employees[i].id === id) {\n        employees.splice(i, 1, employee);\n        break;\n      }\n    }\n\n    localStorage.setItem('employees_data', JSON.stringify(employees));\n    setEmployees(employees);\n    setIsEditing(false);\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: \"Salary ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"salary\",\n        type: \"number\",\n        name: \"salary\",\n        value: salary,\n        onChange: e => setSalary(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '12px'\n          },\n          className: \"muted-button\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: () => setIsEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"cWV/AYyjyANiSPIyixadt96ZqBk=\");\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","Swal","Edit","students","selectedStudent","setStudents","setIsEditing","id","firstName","setFirstName","lastName","setLastName","selectedEmployee","email","setEmail","salary","setSalary","date","setDate","handleUpdate","e","preventDefault","fire","icon","title","text","showConfirmButton","employee","i","employees","length","splice","localStorage","setItem","JSON","stringify","setEmployees","timer","target","value","marginTop","marginLeft"],"sources":["E:/curd/react-crud-project/src/components/Dashboard/Edit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Edit = ({ students, selectedStudent, setStudents, setIsEditing }) => {\r\n  const id = selectedStudent.id;\r\n\r\n  const [firstName, setFirstName] = useState(selectedStudent.firstName);\r\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\r\n  const [email, setEmail] = useState(selectedEmployee.email);\r\n  const [salary, setSalary] = useState(selectedEmployee.salary);\r\n  const [date, setDate] = useState(selectedEmployee.date);\r\n\r\n  const handleUpdate = e => {\r\n    e.preventDefault();\r\n\r\n    if (!firstName || !lastName || !email || !salary || !date) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error!',\r\n        text: 'All fields are required.',\r\n        showConfirmButton: true,\r\n      });\r\n    }\r\n\r\n    const employee = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date,\r\n    };\r\n\r\n    for (let i = 0; i < employees.length; i++) {\r\n      if (employees[i].id === id) {\r\n        employees.splice(i, 1, employee);\r\n        break;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('employees_data', JSON.stringify(employees));\r\n    setEmployees(employees);\r\n    setIsEditing(false);\r\n\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Updated!',\r\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleUpdate}>\r\n        <h1>Edit Employee</h1>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"salary\">Salary ($)</label>\r\n        <input\r\n          id=\"salary\"\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: '30px' }}>\r\n          <input type=\"submit\" value=\"Update\" />\r\n          <input\r\n            style={{ marginLeft: '12px' }}\r\n            className=\"muted-button\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => setIsEditing(false)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}